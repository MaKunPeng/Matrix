version '1.0-SNAPSHOT'

apply plugin: 'org.springframework.boot'

dependencies {
    implementation project(':matrix-common')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'javax.servlet:javax.servlet-api'
    implementation libraries.queryDslJpa
    // security
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    // nacos
//    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
//    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
//    // feign
//    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//    // sentinel
//    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
    // db
    implementation libraries.pgConnect
    // redis lettuce 需要引入此依赖
    implementation libraries.commonsPool2
//    implementation libraries.shardingSphere
    // test
    testImplementation libraries.junit
    // JUnit5需要排除junit-vintage
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // QueryDSL支持
    annotationProcessor("com.querydsl:querydsl-apt:${versions.queryDsl}:jpa",
            "javax.annotation:javax.annotation-api:${versions.javaxAnnotation}")
}

idea {
    module {
//        sourceDirs += file("$projectDir/build/generated/sources/annotationProcessor/java")
    }
}
